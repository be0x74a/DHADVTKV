#!/bin/bash

if [ ! -d "../../build" ] 
    then
        cd ../../
        make build > /dev/null
        cd benchmark/benchmark_1
fi

RESULTS_FOLDER=$(date +%s)

mkdir -p experiments/$RESULTS_FOLDER/configs/
mkdir -p experiments/$RESULTS_FOLDER/results/csv
mkdir -p experiments/$RESULTS_FOLDER/results/img

cp -r templates/* experiments/$RESULTS_FOLDER/configs/

BATCH_SIZE_RANGE=( 01 05 15 30 )

for i in $(eval echo "{0..$1..$2}")
    do
        if [ "$i" -eq "0" ]; then
            i=1
        fi
        echo $i/$1

        sed -e 's/TEMPLATE_SIZE/'$(($i+8))'/' -e 's/LATENCIES_FILE/experiments\/'$RESULTS_FOLDER'\/configs\/latencies\/2pc.latencies/' < experiments/$RESULTS_FOLDER/configs/simulation_params/2pc_config.template > experiments/$RESULTS_FOLDER/config.config
        echo  $(($i))', '`java -classpath ../../build:../../lib/jep-2.3.0.jar:../../lib/djep-1.0.0.jar peersim.Simulator experiments/$RESULTS_FOLDER/config.config 2> /dev/null` | sed -e 's/\n//g' >> experiments/$RESULTS_FOLDER/results/csv/tpc_data.csv
        rm experiments/$RESULTS_FOLDER/config.config
        
        for j in "${BATCH_SIZE_RANGE[@]}"
            do
                sed -e 's/TEMPLATE_SIZE/'$(($i+9))'/' -e 's/BATCH_SIZE/'$j'/' -e 's/LATENCIES_FILE/experiments\/'$RESULTS_FOLDER'\/configs\/latencies\/tsb.latencies/' < experiments/$RESULTS_FOLDER/configs/simulation_params/tsb_config.template > experiments/$RESULTS_FOLDER/config.config
                echo $(($i))', '`java -classpath ../../build:../../lib/jep-2.3.0.jar:../../lib/djep-1.0.0.jar peersim.Simulator experiments/$RESULTS_FOLDER/config.config 2>/dev/null` | sed -e 's/\n//g' >> experiments/$RESULTS_FOLDER/results/csv/tsb_data_$j.csv
                rm experiments/$RESULTS_FOLDER/config.config

            done

    done

# BUILD AND SAVE PLOTS
cd experiments/$RESULTS_FOLDER/results/csv

# clientsVtransactionsDone
gnuplot -e "\
set terminal png size 1920,1080;\
set output '../img/clientsVtransactionsDone.png';\
set xlabel 'Clients';\
set ylabel 'Transactions done';\
FILES = system('ls -1 *.csv');\
LABEL = system(\"ls -1 *.csv | sed -e 's/_data//' -e 's/.csv//'\");\
plot for [i=1:words(FILES)] word(FILES,i) u 1:2 title word(LABEL,i) noenhanced with linespoints linestyle i"

# clientsVbandwidth
gnuplot -e "\
set terminal png size 1920,1080;\
set output '../img/clientsVbandwidth.png';\
set xlabel 'Clients';\
set ylabel '% bandwidth';\
FILES = system('ls -1 *.csv');\
LABEL = system(\"ls -1 *.csv | sed -e 's/_data//' -e 's/.csv//'\");\
plot for [i=1:words(FILES)] word(FILES,i) u 1:3 title word(LABEL,i) noenhanced with linespoints linestyle i"

# clientsVavgTT
gnuplot -e "\
set terminal png size 1920,1080;\
set output '../img/clientsVavgTT.png';\
set xlabel 'Clients';\
set ylabel 'Avg transaction time';\
FILES = system('ls -1 *.csv');\
LABEL = system(\"ls -1 *.csv | sed -e 's/_data//' -e 's/.csv//'\");\
plot for [i=1:words(FILES)] word(FILES,i) u 1:4 title word(LABEL,i) noenhanced with linespoints linestyle i"

# clientsVavgTPC
gnuplot -e "\
set terminal png size 1920,1080;\
set output '../img/clientsVavgTPC.png';\
set xlabel 'Clients';\
set ylabel 'Avg transactions/client';\
FILES = system('ls -1 *.csv');\
LABEL = system(\"ls -1 *.csv | sed -e 's/_data//' -e 's/.csv//'\");\
plot for [i=1:words(FILES)] word(FILES,i) u 1:5 title word(LABEL,i) noenhanced with linespoints linestyle i"